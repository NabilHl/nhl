{% layout 'theme' %}
{% section 'header' %}

<div class="check-carefully-container">
  <div class="product-viewer">
    <div class="product-display-area">
      {% for product in collections.all.products %}
        <div class="product-card" data-product-id="{{ product.id }}">
          <div class="product-3d-container">
            <img src="{{ product.featured_image | img_url: '800x' }}" 
                 alt="{{ product.title }}" 
                 class="product-image-3d">
          </div>
          <div class="product-info">
            <h3>{{ product.title }}</h3>
            <span class="price">{{ product.price | money }}</span>
            <a href="{{ product.url }}" class="btn">View Details</a>
          </div>
        </div>
      {% endfor %}
    </div>
    <div class="navigation-controls">
      <button class="nav-btn prev-btn">←</button>
      <button class="nav-btn next-btn">→</button>
    </div>
  </div>
</div>

{% section 'footer' %}

<style>
.check-carefully-container {
  padding: 2rem;
  max-width: 1200px;
  margin: 0 auto;
}

.product-viewer {
  position: relative;
  height: 70vh;
  overflow: hidden;
  perspective: 1500px;
}

.product-display-area {
  display: flex;
  height: 100%;
  transition: transform 0.8s cubic-bezier(0.65, 0, 0.35, 1);
}

.product-card {
  min-width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: relative;
  transform-style: preserve-3d;
  transition: transform 0.6s;
}

.product-3d-container {
  width: 80%;
  max-width: 500px;
  transform-style: preserve-3d;
  transition: transform 0.5s;
}

.product-image-3d {
  width: 100%;
  height: auto;
  border-radius: 10px;
  box-shadow: 0 20px 40px rgba(0,0,0,0.2);
  transform: rotateY(0deg) rotateX(0deg);
  transition: transform 0.3s;
}

.product-info {
  text-align: center;
  margin-top: 2rem;
  opacity: 0;
  transform: translateY(20px);
  transition: all 0.4s 0.2s;
}

.product-card.active .product-info {
  opacity: 1;
  transform: translateY(0);
}

.navigation-controls {
  position: absolute;
  bottom: 20px;
  width: 100%;
  display: flex;
  justify-content: center;
  gap: 2rem;
}

.nav-btn {
  background: rgba(0,0,0,0.7);
  color: white;
  border: none;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  font-size: 1.5rem;
  cursor: pointer;
  transition: all 0.3s;
}

.nav-btn:hover {
  background: rgba(0,0,0,0.9);
  transform: scale(1.1);
}

/* Mobile responsive styles */
@media (max-width: 768px) {
  .product-viewer {
    height: 60vh;
    perspective: 1000px;
  }
  
  .product-3d-container {
    width: 95%;
  }
  
  .nav-btn {
    width: 40px;
    height: 40px;
    font-size: 1.2rem;
  }
}</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const displayArea = document.querySelector('.product-display-area');
  const productCards = document.querySelectorAll('.product-card');
  const prevBtn = document.querySelector('.prev-btn');
  const nextBtn = document.querySelector('.next-btn');
  let currentIndex = 0;
  
  // Initialize first product as active
  productCards[currentIndex].classList.add('active');
  
  // Mouse movement effect for 3D
  productCards.forEach(card => {
    const imgContainer = card.querySelector('.product-3d-container');
    
    card.addEventListener('mousemove', (e) => {
      if(window.innerWidth > 768) { // Desktop only
        const xAxis = (window.innerWidth / 2 - e.pageX) / 15;
        const yAxis = (window.innerHeight / 2 - e.pageY) / 15;
        imgContainer.style.transform = rotateY(${xAxis}deg) rotateX(${yAxis}deg);
      }
    });
    
    card.addEventListener('mouseleave', () => {
      imgContainer.style.transform = 'rotateY(0deg) rotateX(0deg)';
    });
  });
  
  // Navigation functions
  function goToProduct(index) {
    productCards[currentIndex].classList.remove('active');
    currentIndex = (index + productCards.length) % productCards.length;
    productCards[currentIndex].classList.add('active');
    
    displayArea.style.transform = translateX(-${currentIndex * 100}%);
  }
  
  prevBtn.addEventListener('click', () => goToProduct(currentIndex - 1));
  nextBtn.addEventListener('click', () => goToProduct(currentIndex + 1));
  
  // Swipe for mobile
  let touchStartX = 0;
  let touchEndX = 0;
  
  displayArea.addEventListener('touchstart', (e) => {
    touchStartX = e.changedTouches[0].screenX;
  }, {passive: true});
  
  displayArea.addEventListener('touchend', (e) => {
    touchEndX = e.changedTouches[0].screenX;
    handleSwipe();
  }, {passive: true});
  
  function handleSwipe() {
    if (touchEndX < touchStartX - 50) goToProduct(currentIndex + 1);
    if (touchEndX > touchStartX + 50) goToProduct(currentIndex - 1);
  }
});</script>